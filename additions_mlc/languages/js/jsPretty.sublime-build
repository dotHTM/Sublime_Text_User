{
  // "cmd": ["prettier", "--parser", "json", "--write", "$file"],
  "shell_cmd": "prettier --parser json --write \"$file\"",
  // "file_regex": "",
  "selector": "source.json"

  // prettier --parser json --write $file

  // Usage: prettier [options] [file/glob ...]

  // By default, output is written to stdout.
  // Stdin is read if it is piped to Prettier and no files are given.

  // Output options:

  //   -l, --list-different     Print the names of files that are different from Prettier's formatting.
  //   --write                  Edit files in-place. (Beware!)

  // Format options:

  //   --no-bracket-spacing     Do not print spaces between brackets.
  //   --jsx-bracket-same-line  Put > on the last line instead of at a new line.
  //                            Defaults to false.
  //   --parser <flow|babylon|typescript|css|less|scss|json|graphql>
  //                            Which parser to use.
  //                            Defaults to babylon.
  //   --print-width <int>      The line length where Prettier will try wrap.
  //                            Defaults to 80.
  //   --no-semi                Do not print semicolons, except at the beginning of lines which may need them.
  //   --single-quote           Use single quotes instead of double quotes.
  //                            Defaults to false.
  //   --tab-width <int>        Number of spaces per indentation level.
  //                            Defaults to 2.
  //   --trailing-comma <none|es5|all>
  //                            Print trailing commas wherever possible when multi-line.
  //                            Defaults to none.
  //   --use-tabs               Indent with tabs instead of spaces.
  //                            Defaults to false.

  // Config options:

  //   --config <path>          Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js).
  //   --no-config              Do not look for a configuration file.
  //   --config-precedence <cli-override|file-override|prefer-file>
  //                            Define in which order config files and CLI options should be evaluated.
  //                            Defaults to cli-override.
  //   --find-config-path <path>
  //                            Find and print the path to a configuration file for the given input file.
  //   --ignore-path <path>     Path to a file with patterns describing files to ignore.
  //                            Defaults to .prettierignore.
  //   --with-node-modules      Process files inside 'node_modules' directory.

  // Editor options:

  //   --cursor-offset <int>    Print (to stderr) where a cursor at the given position would move to after formatting.
  //                            This option cannot be used with --range-start and --range-end.
  //                            Defaults to -1.
  //   --range-end <int>        Format code ending at a given character offset (exclusive).
  //                            The range will extend forwards to the end of the selected statement.
  //                            This option cannot be used with --cursor-offset.
  //                            Defaults to Infinity.
  //   --range-start <int>      Format code starting at a given character offset.
  //                            The range will extend backwards to the start of the first line containing the selected statement.
  //                            This option cannot be used with --cursor-offset.
  //                            Defaults to 0.

  // Other options:

  //   --no-color               Do not colorize error messages.
  //   -h, --help <flag>        Show CLI usage, or details about the given flag.
  //                            Example: --help write
  //   --require-pragma         Require either '@prettier' or '@format' to be present in the file's first docblock comment
  //                            in order for it to be formatted.
  //                            Defaults to false.
  //   --stdin                  Force reading input from stdin.
  //   --stdin-filepath <path>  Path to the file to pretend that stdin comes from.
  //   -v, --version            Print Prettier version.
}
